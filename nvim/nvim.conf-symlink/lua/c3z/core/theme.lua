local function setup_jb()
	local colors = {
		background = "#041818",
		foreground = "#d3b58d",
		comment = "#3fdflf",
		string = "#0fdfaf",
		keyword = "white",
		builtin = "lightgreen",
		function_name = "white",
		variable = "#c8d4ec",
		warning = "#504038",
		highlight_foreground = "navyblue",
		highlight_background = "darkseagreen2",
		region_background = "blue",
		widget_field_foreground = "white",
		widget_single_line_field_background = "darkgray",
		cursor = "lightgreen",
	}

	vim.cmd("hi clear")
	vim.cmd("syntax reset")

	vim.o.background = "dark"
	vim.o.termguicolors = true

	-- Set editor background color
	vim.cmd("hi Normal guibg=" .. colors.background .. " guifg=" .. colors.foreground)

	-- Custom group tags and variable tags
	vim.cmd("hi CustomGroupTag gui=underline guifg=lightblue")
	vim.cmd("hi CustomVariableTag gui=underline guifg=lightblue")

	-- Font lock faces
	vim.cmd("hi Comment guifg=" .. colors.comment)
	vim.cmd("hi String guifg=" .. colors.string)
	vim.cmd("hi Keyword guifg=" .. colors.keyword)
	vim.cmd("hi Function guifg=" .. colors.function_name)
	vim.cmd("hi Identifier guifg=" .. colors.variable)
	vim.cmd("hi WarningMsg guifg=" .. colors.warning)

	-- Builtin and constant faces
	vim.cmd("hi Constant guifg=" .. colors.builtin)
	vim.cmd("hi Special guifg=" .. colors.builtin)

	-- Highlighting
	vim.cmd("hi Visual guibg=" .. colors.highlight_background .. " guifg=" .. colors.highlight_foreground)

	-- Status line and cursor
	vim.cmd("hi StatusLine gui=reverse")
	vim.cmd("hi Cursor guibg=" .. colors.cursor)

	-- Region background
	vim.cmd("hi Visual guibg=" .. colors.region_background)

	-- Widgets
	vim.cmd("hi Pmenu guifg=" .. colors.widget_field_foreground)
	vim.cmd("hi PmenuSel guibg=" .. colors.widget_single_line_field_background)
end

local function setup_mar()
	-- Colorscheme generated by https://github.com/arcticlimer/djanho
	vim.cmd([[highlight clear]])

	local highlight = function(group, bg, fg, attr)
		fg = fg and "guifg=" .. fg or ""
		bg = bg and "guibg=" .. bg or ""
		attr = attr and "gui=" .. attr or ""

		vim.api.nvim_command("highlight " .. group .. " " .. fg .. " " .. bg .. " " .. attr)
	end

	local link = function(target, group)
		vim.api.nvim_command("highlight! link " .. target .. " " .. group)
	end

	local Color8 = "#1d291f"
	local Color0 = "#546E7A"
	local Color1 = "#EEFFFF"
	local Color4 = "#c2df6b"
	local Color5 = "#daf1bb"
	local Color10 = "#0a0f0b"
	local Color6 = "#C3E88D"
	local Color2 = "#FF5370"
	local Color3 = "#9db166"
	local Color9 = "#eeffff"
	local Color7 = "#a7d129"

	highlight("Comment", nil, Color0, "italic")
	highlight("Identifier", nil, Color1, nil)
	highlight("Error", nil, Color2, nil)
	highlight("Keyword", nil, Color3, nil)
	highlight("Conditional", nil, Color3, nil)
	highlight("Repeat", nil, Color3, nil)
	highlight("Function", nil, Color4, "bold")
	highlight("Number", nil, Color5, nil)
	highlight("TSCharacter", nil, Color5, nil)
	highlight("String", nil, Color6, nil)
	highlight("StatusLine", Color8, Color7, nil)
	highlight("WildMenu", Color10, Color9, nil)
	highlight("Pmenu", Color10, Color9, nil)
	highlight("PmenuSel", Color9, Color10, nil)
	highlight("PmenuThumb", Color10, Color9, nil)
	highlight("Normal", Color10, Color9, nil)
	highlight("SignColumn", Color10, nil, nil)
	highlight("TabLine", Color10, nil, nil)
	highlight("TabLineSel", nil, Color10, nil)
	highlight("TabLineFill", Color10, nil, nil)
	highlight("TSPunctDelimiter", nil, Color9, nil)

	link("Conditional", "Operator")
	link("TSFuncMacro", "Macro")
	link("TSFunction", "Function")
	link("TSParameterReference", "TSParameter")
	link("TSTagDelimiter", "Type")
	link("TSNamespace", "TSType")
	link("TSField", "Constant")
	link("TSLabel", "Type")
	link("Macro", "Function")
	link("TSConditional", "Conditional")
	link("TSNumber", "Number")
	link("TSProperty", "TSField")
	link("TSConstant", "Constant")
	link("CursorLineNr", "Identifier")
	link("Operator", "Keyword")
	link("Whitespace", "Comment")
	link("TSString", "String")
	link("TSTag", "MyTag")
	link("TSFloat", "Number")
	link("Repeat", "Conditional")
	link("TSType", "Type")
	link("Folded", "Comment")
	link("TSPunctBracket", "MyTag")
	link("TSKeyword", "Keyword")
	link("TSComment", "Comment")
	link("TSOperator", "Operator")
	link("TSPunctSpecial", "TSPunctDelimiter")
	link("TSParameter", "Constant")
	link("TSConstBuiltin", "TSVariableBuiltin")
	link("TSRepeat", "Repeat")
	link("NonText", "Comment")
	link("TelescopeNormal", "Normal")
end

setup_mar()
